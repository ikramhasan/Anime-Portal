// Mocks generated by Mockito 5.1.0 from annotations
// in anime_portal/test/src/anime/repository/anime_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:anime_portal/src/anime/model/anime.dart' as _i8;
import 'package:anime_portal/src/anime/model/character_staff.dart' as _i9;
import 'package:anime_portal/src/anime/model/episode.dart' as _i10;
import 'package:anime_portal/src/anime/model/picture.dart' as _i11;
import 'package:anime_portal/src/anime/model/review.dart' as _i12;
import 'package:anime_portal/src/anime/model/top.dart' as _i7;
import 'package:anime_portal/src/anime/repository/i_anime_repository.dart'
    as _i3;
import 'package:anime_portal/src/app/model/failure.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:fast_immutable_collections/fast_immutable_collections.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IAnimeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAnimeRepository extends _i1.Mock implements _i3.IAnimeRepository {
  MockIAnimeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>> getTrendingAnime() =>
      (super.noSuchMethod(Invocation.method(#getTrendingAnime, []),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>.value(
                      _FakeEither_0<_i5.Failure, _i6.IList<_i7.Top>>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>> getTopAnime() =>
      (super.noSuchMethod(Invocation.method(#getTopAnime, []),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>.value(
                      _FakeEither_0<_i5.Failure, _i6.IList<_i7.Top>>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>> getAiringToday(
          int? weekday) =>
      (super.noSuchMethod(Invocation.method(#getAiringToday, [weekday]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>.value(
                      _FakeEither_0<_i5.Failure, _i6.IList<_i7.Top>>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>> getTrendingManga() =>
      (super.noSuchMethod(Invocation.method(#getTrendingManga, []),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>.value(
                      _FakeEither_0<_i5.Failure, _i6.IList<_i7.Top>>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.IList<_i7.Top>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.Anime>> getAnimeById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getAnimeById, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, _i8.Anime>>.value(
                  _FakeEither_0<_i5.Failure, _i8.Anime>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i8.Anime>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.CharacterStaff>> getCharacterStaff(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getCharacterStaff, [id]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i9.CharacterStaff>>.value(
                      _FakeEither_0<_i5.Failure, _i9.CharacterStaff>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i9.CharacterStaff>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i10.Episode>>> getAnimeEpisodes(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getAnimeEpisodes, [id]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, List<_i10.Episode>>>.value(
                      _FakeEither_0<_i5.Failure, List<_i10.Episode>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i10.Episode>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i11.Picture>>> getAnimePictures(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getAnimePictures, [id]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, List<_i11.Picture>>>.value(
                      _FakeEither_0<_i5.Failure, List<_i11.Picture>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i11.Picture>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Top>>> getAnimeRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getAnimeRecommendations, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i7.Top>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i7.Top>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Top>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i12.Review>>> getAnimeReviews(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getAnimeReviews, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i12.Review>>>.value(
              _FakeEither_0<_i5.Failure, List<_i12.Review>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i12.Review>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Top>>> searchAnime(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchAnime, [query]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i7.Top>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i7.Top>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Top>>>);
}
